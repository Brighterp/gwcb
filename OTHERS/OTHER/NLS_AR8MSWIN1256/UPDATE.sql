/*=======================================================================*/
/* 	 		   CREATED BY SAMEH NOSHI                        */
/*=======================================================================*/

UPDATE FA_SPLIT_QTY A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.FA_SPLIT_QTY
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE FUNCTION_ITEMS A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.FUNCTION_ITEMS
WHERE FUNCTION_ID = A.FUNCTION_ID
AND  ITEM_NAME = A.ITEM_NAME); 
COMMIT;

UPDATE PAYMENTS_VOUCHER_DTL A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.PAYMENTS_VOUCHER_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE PAYMENTS_VOUCHER_JV A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.PAYMENTS_VOUCHER_JV
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE PROJECT_BANK_AMOUNTS_D A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.PROJECT_BANK_AMOUNTS_D
WHERE BANK_PROGRAM_ID = A.BANK_PROGRAM_ID); 
COMMIT;

UPDATE PROJECT_BANK_AMOUNTS_H A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.PROJECT_BANK_AMOUNTS_H
WHERE BANK_AMOUNTS_ID = A.BANK_AMOUNTS_ID); 
COMMIT;

UPDATE RECEIPT_VOUCHER_DTL A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.RECEIPT_VOUCHER_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE RECEIPT_VOUCHER_JV A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.RECEIPT_VOUCHER_JV
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE RNT_MAINTEN_TYPES A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.RNT_MAINTEN_TYPES
WHERE BRANCH_ID = A.BRANCH_ID
AND  MAINTEN_TYPE_NO = A.MAINTEN_TYPE_NO); 
COMMIT;

UPDATE RNT_PAYMENT_H A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.RNT_PAYMENT_H
WHERE BRANCH_ID = A.BRANCH_ID
AND  DOC_NO = A.DOC_NO
AND TENANT_NO = A.TENANT_NO); 
COMMIT;

UPDATE RNT_PREMISES A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.RNT_PREMISES
WHERE BRANCH_ID = A.BRANCH_ID
AND  PREMISE_NO = A.PREMISE_NO); 
COMMIT;

UPDATE RNT_PREM_TYPES A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.RNT_PREM_TYPES
WHERE BRANCH_ID = A.BRANCH_ID
AND  TYPE_NO = A.TYPE_NO); 
COMMIT;

UPDATE SUPPLIERS_TRANSACTIONS A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.SUPPLIERS_TRANSACTIONS
WHERE TRANSACTION_ID = A.TRANSACTION_ID); 
COMMIT;

UPDATE TREASURIES_TRANSACTIONS A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.TREASURIES_TRANSACTIONS
WHERE TRANSACTION_ID = A.TRANSACTION_ID
AND  TREASURIES_ID = A.TREASURIES_ID
); 
COMMIT;

UPDATE 000 A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.000
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO
AND BANK_ACC_ID = A.BANK_ACC_ID); 
COMMIT;

UPDATE 000 A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.000
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO
AND BANK_ACC_ID = A.BANK_ACC_ID); 
COMMIT;

UPDATE 000 A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.000
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO
AND BANK_ACC_ID = A.BANK_ACC_ID); 
COMMIT;

UPDATE 000 A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.000
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO
AND BANK_ACC_ID = A.BANK_ACC_ID); 
COMMIT;

UPDATE 000 A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.000
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO
AND BANK_ACC_ID = A.BANK_ACC_ID); 
COMMIT;

UPDATE 000 A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.000
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO
AND BANK_ACC_ID = A.BANK_ACC_ID); 
COMMIT;





UPDATE ACCOUNTS_OPEN_BALANCE_DTL_CUS A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.ACCOUNTS_OPEN_BALANCE_DTL_CUS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO
AND CUSTOMER_ID = A.CUSTOMER_ID); 
COMMIT;

UPDATE ACCOUNTS_OPEN_BALANCE_DTL_EMP A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.ACCOUNTS_OPEN_BALANCE_DTL_EMP
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO
AND EMPLOYEE_ID = A.EMPLOYEE_ID); 
COMMIT;

UPDATE ACCOUNTS_OPEN_BALANCE_DTL_LEG A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.ACCOUNTS_OPEN_BALANCE_DTL_LEG
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO
AND LEGAL_PERSON_ID = A.LEGAL_PERSON_ID); 
COMMIT;

UPDATE ACCOUNTS_OPEN_BALANCE_DTL_SAL A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.ACCOUNTS_OPEN_BALANCE_DTL_SAL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO
AND EMPLOYEE_ID = A.EMPLOYEE_ID); 
COMMIT;

UPDATE ACCOUNTS_OPEN_BALANCE_DTL_SUP A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.ACCOUNTS_OPEN_BALANCE_DTL_SUP
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO
AND SUPPLIER_ID = A.SUPPLIER_ID); 
COMMIT;

UPDATE ACCOUNTS_OPEN_BALANCE_DTL_TRE A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.ACCOUNTS_OPEN_BALANCE_DTL_TRE
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO
AND TREASURIES_ID = A.TREASURIES_ID); 
COMMIT;

UPDATE EXPENSES_TRANSACTIONS A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.EXPENSES_TRANSACTIONS
WHERE TRANSACTION_ID = A.TRANSACTION_ID
AND  EXPENSES_ID = A.EXPENSES_ID); 
COMMIT;

UPDATE FA_EXPENSES_DTL A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.FA_EXPENSES_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;


UPDATE ACCOUNTS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.ACCOUNTS
WHERE ACCOUNT_ID = A.ACCOUNT_ID); 
COMMIT;

UPDATE FUNCTIONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FUNCTIONS
WHERE FUNCTION_ID = A.FUNCTION_ID); 
COMMIT;

UPDATE JOURNAL_TYPES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.JOURNAL_TYPES
WHERE JOURNAL_TYPES_ID = A.JOURNAL_TYPES_ID); 
COMMIT;

UPDATE PROMPTS_LANGUAGES A
SET PROMPT_TEXT = NVL((SELECT PROMPT_TEXT
FROM BRIGHT_DATA.PROMPTS_LANGUAGES
WHERE PROMPTS_ID = A.PROMPTS_ID
AND LANGUAGE_ID = 2),'0')
WHERE LANGUAGE_ID = 2;
COMMIT;

UPDATE ACCOUNTS_OPEN_BALANCE A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.ACCOUNTS_OPEN_BALANCE
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE ACCOUNTS_OPEN_BALANCE_DTL A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.ACCOUNTS_OPEN_BALANCE_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;


UPDATE ACCOUNTS_OPEN_BALANCE_DTL_BNK A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.ACCOUNTS_OPEN_BALANCE_DTL_BNK
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND  DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO
AND BANK_ACC_ID = A.BANK_ACC_ID); 
COMMIT;


UPDATE ASSET_DEPRCIATIONS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.ASSET_DEPRCIATIONS
WHERE FIXED_ASSET_ID = A.FIXED_ASSET_ID
AND  MONTH = A.MONTH); 
COMMIT;

UPDATE ASSET_EXPENSES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.ASSET_EXPENSES
WHERE ASSET_EXPENSES_ID = A.ASSET_EXPENSES_ID); 
COMMIT;

UPDATE BANKS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.BANKS
WHERE BANK_ID = A.BANK_ID); 
COMMIT;

UPDATE BRANCHES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.BRANCHES
WHERE BRANCH_ID = A.BRANCH_ID),
ADDRESS_S = (SELECT ADDRESS_S
FROM BRIGHT_DATA.BRANCHES
WHERE BRANCH_ID = A.BRANCH_ID); 
COMMIT;

UPDATE CLOSING_FINANCIAL_YEARS A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.CLOSING_FINANCIAL_YEARS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE CODES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CODES
WHERE CODES_ID = A.CODES_ID); 
COMMIT;

UPDATE CODE_TYPES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CODE_TYPES
WHERE CODE_TYPES_ID = A.CODE_TYPES_ID); 
COMMIT;

UPDATE CODES_SYS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CODES_SYS
WHERE CODES_SYS_ID = A.CODES_SYS_ID
AND CODE_TYPES_ID = A.CODE_TYPES_ID); 
COMMIT;

UPDATE COST_CENTERS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.COST_CENTERS
WHERE COST_CENTER_ID = A.COST_CENTER_ID); 
COMMIT;

UPDATE CURRENCIES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CURRENCIES
WHERE CURRENCIES_ID = A.CURRENCIES_ID)
,SHORT_SECONDARY_NAME = (SELECT SHORT_SECONDARY_NAME
FROM BRIGHT_DATA.CURRENCIES
WHERE CURRENCIES_ID = A.CURRENCIES_ID)
,FRACTION_SECONDARY_NAME = (SELECT FRACTION_SECONDARY_NAME
FROM BRIGHT_DATA.CURRENCIES
WHERE CURRENCIES_ID = A.CURRENCIES_ID);
COMMIT;


UPDATE CUSTODIANS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CUSTODIANS
WHERE CUSTODIAN_ID = A.CUSTODIAN_ID); 
COMMIT;

UPDATE CUSTOMERS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CUSTOMERS
WHERE CUSTOMER_ID = A.CUSTOMER_ID); 
COMMIT;

UPDATE CUSTOMERS_CONTACT_PERSONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CUSTOMERS_CONTACT_PERSONS
WHERE CUSTOMERS_CONTACT_PERSONS_ID = A.CUSTOMERS_CONTACT_PERSONS_ID); 
COMMIT;

UPDATE CUSTOMERS_GROUPS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CUSTOMERS_GROUPS
WHERE CUSTOMERS_GROUPS_ID = A.CUSTOMERS_GROUPS_ID); 
COMMIT;

UPDATE CUSTOMERS_GROUPS_MAIN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CUSTOMERS_GROUPS_MAIN
WHERE CUSTOMERS_GROUPS_MAIN_ID = A.CUSTOMERS_GROUPS_MAIN_ID); 
COMMIT;

UPDATE CUSTOMERS_OPEN_BALANCE A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.CUSTOMERS_OPEN_BALANCE
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE CUSTOMERS_OPEN_BALANCE_DTL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.CUSTOMERS_OPEN_BALANCE_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND CUSTOMER_ID = A.CUSTOMER_ID); 
COMMIT;

UPDATE CUSTOMERS_TRANSACTIONS A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.CUSTOMERS_TRANSACTIONS
WHERE TRANSACTION_ID = A.TRANSACTION_ID); 
COMMIT;

UPDATE DEPARTMENTS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.DEPARTMENTS
WHERE DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE DEPARTMENTS_GROUPS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.DEPARTMENTS_GROUPS
WHERE DEPARTMENT_GROUPS_ID = A.DEPARTMENT_GROUPS_ID); 
COMMIT;

UPDATE DOCUMENT_TYPES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.DOCUMENT_TYPES
WHERE DOCUMENT_TYPES_ID = A.DOCUMENT_TYPES_ID); 
COMMIT;

UPDATE EMPLOYEES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMPLOYEES
WHERE EMPLOYEE_ID = A.EMPLOYEE_ID)
, NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMPLOYEES
WHERE EMPLOYEE_ID = A.EMPLOYEE_ID)
, ADDRESS_S = (SELECT ADDRESS_S
FROM BRIGHT_DATA.EMPLOYEES
WHERE EMPLOYEE_ID = A.EMPLOYEE_ID);
COMMIT;

UPDATE EMPLOYEES_GROUPS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMPLOYEES_GROUPS
WHERE EMPLOYEES_GROUPS_ID = A.EMPLOYEES_GROUPS_ID); 
COMMIT;

UPDATE EMPLOYEES_GROUPS_MAIN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMPLOYEES_GROUPS_MAIN
WHERE EMPLOYEES_GROUPS_MAIN_ID = A.EMPLOYEES_GROUPS_MAIN_ID); 
COMMIT;

UPDATE EMPLOYEE_EXPERIENCE A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMPLOYEE_EXPERIENCE
WHERE EMPLOYEE_ID = A.EMPLOYEE_ID
AND FROM_DATE = A.FROM_DATE); 
COMMIT;

UPDATE EMPLOYEE_LOAN A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMPLOYEE_LOAN
WHERE EMPLOYEE_LOAN_ID = A.EMPLOYEE_LOAN_ID); 
COMMIT;

UPDATE EMPLOYEE_MISSION A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMPLOYEE_MISSION
WHERE EMPLOYEE_MISSION_ID = A.EMPLOYEE_MISSION_ID); 
COMMIT;

UPDATE EMPLOYEE_PERMISSION A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMPLOYEE_PERMISSION
WHERE EMPLOYEE_PERMISSION_ID = A.EMPLOYEE_PERMISSION_ID); 
COMMIT;

UPDATE EMPLOYEE_TRAINING_COURSE A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMPLOYEE_TRAINING_COURSE
WHERE EMPLOYEE_TRAINING_COURSE_ID = A.EMPLOYEE_TRAINING_COURSE_ID); 
COMMIT;

UPDATE EMPLOYEE_VACATION A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMPLOYEE_VACATION
WHERE EMPLOYEE_VACATION_ID = A.EMPLOYEE_VACATION_ID); 
COMMIT;

UPDATE EMP_CONTRACT A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_CONTRACT
WHERE EMP_CONTRACT_ID = A.EMP_CONTRACT_ID); 
COMMIT;

UPDATE EMP_CONTRACT A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_CONTRACT
WHERE EMP_CONTRACT_ID = A.EMP_CONTRACT_ID)
,NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMP_CONTRACT
WHERE EMP_CONTRACT_ID = A.EMP_CONTRACT_ID); 
COMMIT;

UPDATE EMP_DEPARTMENT A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_DEPARTMENT
WHERE EMP_DEPARTMENT_ID = A.EMP_DEPARTMENT_ID); 
COMMIT;

UPDATE EMP_DEPARTMENT_MAIN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_DEPARTMENT_MAIN
WHERE EMP_DEPARTMENT_MAIN_ID = A.EMP_DEPARTMENT_MAIN_ID); 
COMMIT;

UPDATE EMP_GRADES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_GRADES
WHERE EMP_GRADES_ID = A.EMP_GRADES_ID)
,NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMP_GRADES
WHERE EMP_GRADES_ID = A.EMP_GRADES_ID); 
COMMIT;

UPDATE EMP_FAMILY A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_FAMILY
WHERE EMP_FAMILY_ID = A.EMP_FAMILY_ID)
,NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMP_FAMILY
WHERE EMP_FAMILY_ID = A.EMP_FAMILY_ID); 
COMMIT;

UPDATE EMP_HOSPITAL_HISTORY A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMP_HOSPITAL_HISTORY
WHERE EMP_HOSPITAL_HISTORY_ID = A.EMP_HOSPITAL_HISTORY_ID); 
COMMIT;

UPDATE EMP_JOBS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_JOBS
WHERE EMP_JOB_ID = A.EMP_JOB_ID)
,NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMP_JOBS
WHERE EMP_JOB_ID = A.EMP_JOB_ID); 
COMMIT;

UPDATE EMP_PERMISSION A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMP_PERMISSION
WHERE EMP_PERMISSION_ID = A.EMP_PERMISSION_ID); 
COMMIT;

UPDATE EMP_PROMOTION A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMP_PROMOTION
WHERE EMPLOYEE_ID = A.EMPLOYEE_ID
AND PROMOTION_DATE = A.PROMOTION_DATE); 
COMMIT;

UPDATE EMP_VACATION A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.EMP_VACATION
WHERE EMP_VACATION_ID = A.EMP_VACATION_ID); 
COMMIT;

UPDATE EMP_VACATION_OPEN_BALANCE A
SET REMARKS = (SELECT REMARKS
FROM BRIGHT_DATA.EMP_VACATION
WHERE EMPLOYEE_ID = A.EMPLOYEE_ID
AND VACATION_TYPES_ID = A.VACATION_TYPES_ID); 
COMMIT;

UPDATE EMP_VACATION_TEMP A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_VACATION_TEMP
WHERE EMP_VACATION_TEMP_ID = A.EMP_VACATION_TEMP_ID); 
COMMIT;

UPDATE ENTITLE_DEDUCT A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.ENTITLE_DEDUCT
WHERE ENTITLE_DEDUCT_ID = A.ENTITLE_DEDUCT_ID
AND ENTITLE_DEDUCT_FLAG = A.ENTITLE_DEDUCT_FLAG)
, NOTES = (SELECT NOTES
FROM BRIGHT_DATA.ENTITLE_DEDUCT
WHERE ENTITLE_DEDUCT_ID = A.ENTITLE_DEDUCT_ID
AND ENTITLE_DEDUCT_FLAG = A.ENTITLE_DEDUCT_FLAG);
COMMIT;

UPDATE EXPENSES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EXPENSES
WHERE EXPENSES_ID = A.EXPENSES_ID); 
COMMIT;

UPDATE FA_ADD_VALUE A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.FA_ADD_VALUE
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE FA_BRANCHES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FA_BRANCHES
WHERE FA_BRANCH_ID = A.FA_BRANCH_ID)
, NOTES = (SELECT NOTES
FROM BRIGHT_DATA.FA_BRANCHES
WHERE FA_BRANCH_ID = A.FA_BRANCH_ID); 
COMMIT;

UPDATE FA_DEPARTMENTS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FA_DEPARTMENTS
WHERE FA_DEPARTMENT_ID = A.FA_DEPARTMENT_ID) 
, NOTES = (SELECT NOTES
FROM BRIGHT_DATA.FA_DEPARTMENTS
WHERE FA_DEPARTMENT_ID = A.FA_DEPARTMENT_ID);
COMMIT;

UPDATE FA_DEPR_DOCUMENT A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.FA_DEPR_DOCUMENT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE FA_EXPENSES A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.FA_EXPENSES
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;


UPDATE FA_GROUPS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FA_GROUPS
WHERE FA_GROUPS_ID = A.FA_GROUPS_ID); 
COMMIT;

UPDATE FA_GROUPS_MAIN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FA_GROUPS_MAIN
WHERE FA_GROUPS_MAIN_ID = A.FA_GROUPS_MAIN_ID); 
COMMIT;

UPDATE FA_LEDGER_TRANSACTIONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FA_LEDGER_TRANSACTIONS
WHERE FA_LEDGER_TRANSACTIONS_ID = A.FA_LEDGER_TRANSACTIONS_ID); 
COMMIT;

UPDATE FA_SUBTRACT_VALUE A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.FA_SUBTRACT_VALUE
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE FIXED_ASSETS A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.FIXED_ASSETS
WHERE FIXED_ASSET_ID = A.FIXED_ASSET_ID)
,SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FIXED_ASSETS
WHERE FIXED_ASSET_ID = A.FIXED_ASSET_ID) ;
COMMIT;

UPDATE FIXED_ASSETS_DISPOSAL A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.FIXED_ASSETS_DISPOSAL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE FUNCTIONS A
SET SECONDARY_DESCRIPTION = (SELECT SECONDARY_DESCRIPTION
FROM BRIGHT_DATA.FUNCTIONS
WHERE FUNCTION_ID = A.FUNCTION_ID)
,SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FUNCTIONS
WHERE FUNCTION_ID = A.FUNCTION_ID); 
COMMIT;

UPDATE GENERAL_ACCOUNTS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.GENERAL_ACCOUNTS
WHERE GENERAL_ACCOUNT_ID = A.GENERAL_ACCOUNT_ID); 
COMMIT;

UPDATE INSURANCE_COMPANY A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.INSURANCE_COMPANY
WHERE INSURANCE_COMPANY_ID = A.INSURANCE_COMPANY_ID); 
COMMIT;

UPDATE ITEMS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.ITEMS
WHERE ITEMS_ID = A.ITEMS_ID)
,SECONDARY_DESCRIPTION = (SELECT SECONDARY_DESCRIPTION
FROM BRIGHT_DATA.ITEMS
WHERE ITEMS_ID = A.ITEMS_ID); 
COMMIT;

UPDATE ITEMS_GROUPS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.ITEMS_GROUPS
WHERE ITEMS_GROUPS_ID = A.ITEMS_GROUPS_ID); 
COMMIT;

UPDATE ITEMS_GROUPS_MAIN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.ITEMS_GROUPS_MAIN
WHERE ITEMS_GROUPS_MAIN_ID = A.ITEMS_GROUPS_MAIN_ID); 
COMMIT;

UPDATE JOBS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.JOBS
WHERE JOB_ID = A.JOB_ID); 
COMMIT;

UPDATE JOURNALS A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.JOURNALS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE MONTHS_SYS A
SET DESC_A = (SELECT DESC_A
FROM BRIGHT_DATA.MONTHS_SYS
WHERE CODE = A.CODE); 
COMMIT;

UPDATE STORES_TRANSACTIONS A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.STORES_TRANSACTIONS
WHERE TRANSACTION_ID = A.TRANSACTION_ID
AND STORES_ID = A.STORES_ID)
WHERE  EXISTS
(SELECT 1
FROM BRIGHT_DATA.STORES_TRANSACTIONS B
WHERE B.TRANSACTION_ID = A.TRANSACTION_ID
AND B.STORES_ID = A.STORES_ID);
COMMIT;

UPDATE USER_CODE_TYPES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.USER_CODE_TYPES
WHERE USER_CODE_TYPES_ID = A.USER_CODE_TYPES_ID
AND SUB_SYSTEM = A.SUB_SYSTEM); 
COMMIT;



UPDATE JOURNALS_ADT A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.JOURNALS_ADT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE JOURNALS_ENTRIES A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.JOURNALS_ENTRIES
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE JOURNALS_ENTRIES_ADT A
SET DESCRIPTION = (SELECT DESCRIPTION
FROM BRIGHT_DATA.JOURNALS_ENTRIES_ADT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE POST_SALARY_TO_GL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.POST_SALARY_TO_GL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PUR_INVOICES A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_INVOICES
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PUR_INVOICES_ADT A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_INVOICES_ADT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PUR_INVOICES_PAYMENT A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_INVOICES_PAYMENT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE PUR_INVOICES_TERMS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_INVOICES_TERMS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE PUR_MISSING_DOCUMENT A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_MISSING_DOCUMENT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PUR_ORDERS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_ORDERS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PUR_ORDERS_ADT A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_ORDERS_ADT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PUR_ORDERS_TERMS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_ORDERS_TERMS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE PUR_QUOTATIONS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_QUOTATIONS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PUR_QUOTATIONS_ADT A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_QUOTATIONS_ADT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PUR_RETURNES A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_RETURNES
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;


UPDATE PUR_RETURNES_ADT A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_RETURNES_ADT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PUR_SERVICES_INVOICES A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_SERVICES_INVOICES
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PUR_SERVICES_INVOICES_ADT A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_SERVICES_INVOICES_ADT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PUR_SERVICES_RETURNES A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_SERVICES_RETURNES
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PUR_SERVICES_RETURNES_ADT A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_SERVICES_RETURNES_ADT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE RECEIVE_VOUCHER A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.RECEIVE_VOUCHER
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE SAL_INVOICES A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_INVOICES
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE SAL_INVOICES_ADT A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_INVOICES_ADT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE SAL_ORDERS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_ORDERS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE SAL_QUOTATIONS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_QUOTATIONS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE SAL_RETURNES A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_RETURNES
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE SAL_SERVICES_INVOICES A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_SERVICES_INVOICES
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE SAL_SERVICES_RETURNES A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_SERVICES_RETURNES
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE SAL_SERVICE_DELIVERY A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_SERVICE_DELIVERY
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE STOCKTAKING A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STOCKTAKING
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;


UPDATE STOCKTAKING A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STOCKTAKING
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE STOCK_IN_DOCUMENTS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STOCK_IN_DOCUMENTS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE STOCK_OUT_DOCUMENTS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STOCK_OUT_DOCUMENTS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE STORES_OPEN_BALANCE A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STORES_OPEN_BALANCE
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE STORE_TRANSFERS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STORE_TRANSFERS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE SUPPLIERS_OPEN_BALANCE A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SUPPLIERS_OPEN_BALANCE
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE WORK_LIST A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.WORK_LIST
WHERE WORK_LIST_ID = A.WORK_LIST_ID); 
COMMIT;

UPDATE UPDATE_EXPIRY A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.UPDATE_EXPIRY
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE PAYMENTS_VOUCHER_CHECK A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PAYMENTS_VOUCHER_CHECK
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PAYMENT_VOUCHER A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PAYMENT_VOUCHER
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PAY_CHECK_COLLECTION A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PAY_CHECK_COLLECTION
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PAY_CHECK_RETURN A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PAY_CHECK_RETURN
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE POST_SALARY_TO_GL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.POST_SALARY_TO_GL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE POS_SAL_INVOICES A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.POS_SAL_INVOICES
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE POS_SAL_RETURNES A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.POS_SAL_RETURNES
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PUR_INVOICES A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_INVOICES
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE PAY_CHECK_COLLECTION_DTL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PAY_CHECK_COLLECTION_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;


UPDATE PAY_CHECK_RETURN_DTL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PAY_CHECK_RETURN_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE POS_SAL_INVOICES_ITEMS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.POS_SAL_INVOICES_ITEMS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE POS_SAL_RETURNES_ITEMS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.POS_SAL_RETURNES_ITEMS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE PUR_MISSING_DOCUMENT_ITEMS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_MISSING_DOCUMENT_ITEMS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE PUR_QUOTATIONS_ITEMS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_QUOTATIONS_ITEMS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE PUR_RETURNES_ITEMS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_RETURNES_ITEMS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE PUR_SERVICES_INVOICES_DTL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_SERVICES_INVOICES_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE PUR_SERVICE_DELIVERY_DTL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_SERVICE_DELIVERY_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE PUR_SERVICE_ORDER_DTL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_SERVICE_ORDER_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE PUR_SERVICE_QUOTATION_DTL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.PUR_SERVICE_QUOTATION_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE RECEIPT_FEED_TO_HAND_DTL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.RECEIPT_FEED_TO_HAND_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND CHECK_ID = A.CHECK_ID); 
COMMIT;

UPDATE SAL_INVOICES_ITEMS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_INVOICES_ITEMS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE SAL_QUOTATIONS_ITEMS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_QUOTATIONS_ITEMS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE SAL_RETURNES_ITEMS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_RETURNES_ITEMS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE SAL_SERVICES_INVOICES_DTL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_SERVICES_INVOICES_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE SAL_SERVICES_RETURNES_DTL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_SERVICES_RETURNES_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE SAL_SERVICE_ORDER_DTL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_SERVICE_ORDER_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE SAL_SERVICE_QUOTATION_DTL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_SERVICE_QUOTATION_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;

UPDATE SAL_SERVICE_REQUEST_DTL A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SAL_SERVICE_REQUEST_DTL
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID
AND ARRANGMENT_NO = A.ARRANGMENT_NO); 
COMMIT;
UPDATE CHECKS_TRANSACTIONS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.CHECKS_TRANSACTIONS
WHERE TRANSACTION_ID = A.TRANSACTION_ID); 
COMMIT;

UPDATE LEGAL_PERSONS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.LEGAL_PERSONS
WHERE LEGAL_PERSON_ID = A.LEGAL_PERSON_ID); 
COMMIT;

UPDATE STOCKTAKING_ADT A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STOCKTAKING_ADT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE STOCK_IN_DOCUMENTS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STOCK_IN_DOCUMENTS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE STOCK_IN_DOCUMENTS_ADT A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STOCK_IN_DOCUMENTS_ADT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE STOCK_OUT_DOCUMENTS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STOCK_OUT_DOCUMENTS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE STORES_ASSEMBLY A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STORES_ASSEMBLY
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE STORES_DISPOSE A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STORES_DISPOSE
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE STORES_DISPOSE_ADT A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STORES_DISPOSE_ADT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE STORES_OPEN_BALANCE A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STORES_OPEN_BALANCE
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE STORE_TRANSFERS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STORE_TRANSFERS
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE STORE_TRANSFERS_ADT A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.STORE_TRANSFERS_ADT
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;

UPDATE SUPPLIERS_OPEN_BALANCE A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SUPPLIERS_OPEN_BALANCE
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE UPDATE_EXPIRY A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.UPDATE_EXPIRY
WHERE DOCUMENT_ID = A.DOCUMENT_ID
AND STORES_ID = A.STORES_ID); 
COMMIT;



UPDATE JOURNAL_TYPES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.JOURNAL_TYPES
WHERE JOURNAL_TYPES_ID = A.JOURNAL_TYPES_ID); 
COMMIT;

UPDATE LANGUAGE_DEFINITIONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.LANGUAGE_DEFINITIONS
WHERE LANGUAGE_ID = A.LANGUAGE_ID); 
COMMIT;

UPDATE LEGAL_PERSONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.LEGAL_PERSONS
WHERE LEGAL_PERSON_ID = A.LEGAL_PERSON_ID); 
COMMIT;

UPDATE LEGAL_PERSON_CON_PRS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.LEGAL_PERSON_CON_PRS
WHERE LEGAL_PERSON_CON_PRS_ID = A.LEGAL_PERSON_CON_PRS_ID); 
COMMIT;

UPDATE MESSAGES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.MESSAGES
WHERE MESSAGES_ID = A.MESSAGES_ID); 
COMMIT;

UPDATE PENALTIES_LIST A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.PENALTIES_LIST
WHERE PENALTIES_LIST_ID = A.PENALTIES_LIST_ID); 
COMMIT;

UPDATE PRODUCTION A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.PRODUCTION
WHERE PRODUCTION_ID = A.PRODUCTION_ID); 
COMMIT;

UPDATE PUR_SERVICES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.PUR_SERVICES
WHERE PUR_SERVICES_ID = A.PUR_SERVICES_ID); 
COMMIT;

UPDATE SALES_MAN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SALES_MAN
WHERE SALES_MAN_ID = A.SALES_MAN_ID); 
COMMIT;

UPDATE SALES_PORMOTIONS A
SET NOTES = (SELECT NOTES
FROM BRIGHT_DATA.SALES_PORMOTIONS
WHERE DOCUMENT_ID = A.DOCUMENT_ID); 
COMMIT;

UPDATE SALES_SERVICES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SALES_SERVICES
WHERE SALES_SERVICES_ID = A.SALES_SERVICES_ID); 
COMMIT;


UPDATE SUBSIDIARIES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SUBSIDIARIES
WHERE SUBSIDIARIES_ID = A.SUBSIDIARIES_ID); 
COMMIT;

UPDATE SUPPLIERS_CONTACT_PERSONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SUPPLIERS_CONTACT_PERSONS
WHERE SUPPLIERS_CONTACT_PERSONS_ID = A.SUPPLIERS_CONTACT_PERSONS_ID); 
COMMIT;

UPDATE SUPPLIERS_GROUPS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SUPPLIERS_GROUPS
WHERE SUPPLIERS_GROUPS_ID = A.SUPPLIERS_GROUPS_ID); 
COMMIT;

UPDATE SUPPLIERS_GROUPS_MAIN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SUPPLIERS_GROUPS_MAIN
WHERE SUPPLIERS_GROUPS_MAIN_ID = A.SUPPLIERS_GROUPS_MAIN_ID); 
COMMIT;

UPDATE SUPPLIER_EXPENSES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SUPPLIER_EXPENSES
WHERE SUPPLIER_EXPENSES_ID = A.SUPPLIER_EXPENSES_ID); 
COMMIT;

UPDATE USER_CODES_SYS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.USER_CODES_SYS
WHERE USER_CODES_SYS_ID = A.USER_CODES_SYS_ID); 
COMMIT;


UPDATE ACCS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.ACCS
WHERE ACC_ID = A.ACC_ID); 
COMMIT;

UPDATE ACTIVITIES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.ACTIVITIES
WHERE ACTIVITY_ID = A.ACTIVITY_ID); 
COMMIT;

UPDATE ASSET_EXPENSES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.ASSET_EXPENSES
WHERE ASSET_EXPENSES_ID = A.ASSET_EXPENSES_ID); 
COMMIT;

UPDATE BANKS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.BANKS
WHERE BANK_ID = A.BANK_ID); 
COMMIT;

UPDATE BANK_ACC A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.BANK_ACC
WHERE BANK_ACC_ID = A.BANK_ACC_ID); 
COMMIT;

UPDATE BRANCHES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.BRANCHES
WHERE BRANCH_ID = A.BRANCH_ID); 
COMMIT;

UPDATE CASH_DRAWER A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CASH_DRAWER
WHERE CASH_DRAWER_ID = A.CASH_DRAWER_ID); 
COMMIT;

UPDATE CODES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CODES
WHERE CODES_ID = A.CODES_ID); 
COMMIT;

UPDATE CODES_SYS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CODES_SYS
WHERE CODES_SYS_ID = A.CODES_SYS_ID); 
COMMIT;

UPDATE CODE_TYPES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CODE_TYPES
WHERE CODE_TYPES_ID = A.CODE_TYPES_ID); 
COMMIT;

UPDATE CONTRACT_CONDITION A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CONTRACT_CONDITION
WHERE CONTRACT_CONDITION_ID = A.CONTRACT_CONDITION_ID); 
COMMIT;

UPDATE CON_LEDGER_TRANSACTIONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CON_LEDGER_TRANSACTIONS
WHERE CON_LEDGER_TRANSACTIONS_ID = A.CON_LEDGER_TRANSACTIONS_ID); 
COMMIT;

UPDATE CON_SLICES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CON_SLICES
WHERE CON_SLICES_ID = A.CON_SLICES_ID); 
COMMIT;

UPDATE CSH_LEDGER_TRANSACTIONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CSH_LEDGER_TRANSACTIONS
WHERE CSH_LEDGER_TRANSACTIONS_ID = A.CSH_LEDGER_TRANSACTIONS_ID); 
COMMIT;

UPDATE CURRENCIES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CURRENCIES
WHERE CURRENCIES_ID = A.CURRENCIES_ID); 
COMMIT;

UPDATE CUSTODIANS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CUSTODIANS
WHERE CUSTODIAN_ID = A.CUSTODIAN_ID); 
COMMIT;

UPDATE CUSTOMERS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CUSTOMERS
WHERE CUSTOMER_ID = A.CUSTOMER_ID); 
COMMIT;

UPDATE CUSTOMERS_CONTACT_PERSONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CUSTOMERS_CONTACT_PERSONS
WHERE CUSTOMERS_CONTACT_PERSONS_ID = A.CUSTOMERS_CONTACT_PERSONS_ID); 
COMMIT;

UPDATE CUSTOMERS_GROUPS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CUSTOMERS_GROUPS
WHERE CUSTOMERS_GROUPS_ID = A.CUSTOMERS_GROUPS_ID); 
COMMIT;

UPDATE CUSTOMERS_GROUPS_MAIN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.CUSTOMERS_GROUPS_MAIN
WHERE CUSTOMERS_GROUPS_MAIN_ID = A.CUSTOMERS_GROUPS_MAIN_ID); 
COMMIT;

UPDATE DEPARTMENTS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.DEPARTMENTS
WHERE DEPARTMENT_ID = A.DEPARTMENT_ID); 
COMMIT;

UPDATE DEPARTMENTS_GROUPS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.DEPARTMENTS_GROUPS
WHERE DEPARTMENT_GROUPS_ID = A.DEPARTMENT_GROUPS_ID); 
COMMIT;

UPDATE DOCUMENT_TYPES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.DOCUMENT_TYPES
WHERE DOCUMENT_TYPES_ID = A.DOCUMENT_TYPES_ID); 
COMMIT;

UPDATE EMPLOYEES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMPLOYEES
WHERE EMPLOYEE_ID = A.EMPLOYEE_ID); 
COMMIT;

UPDATE EMPLOYEES_GROUPS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMPLOYEES_GROUPS
WHERE EMPLOYEES_GROUPS_ID = A.EMPLOYEES_GROUPS_ID); 
COMMIT;

UPDATE EMPLOYEES_GROUPS_MAIN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMPLOYEES_GROUPS_MAIN
WHERE EMPLOYEES_GROUPS_MAIN_ID = A.EMPLOYEES_GROUPS_MAIN_ID); 
COMMIT;

UPDATE EMP_CONTRACT A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_CONTRACT
WHERE EMP_CONTRACT_ID = A.EMP_CONTRACT_ID); 
COMMIT;

UPDATE EMP_DEPARTMENT A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_DEPARTMENT
WHERE EMP_DEPARTMENT_ID = A.EMP_DEPARTMENT_ID); 
COMMIT;

UPDATE EMP_DEPARTMENT_MAIN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_DEPARTMENT_MAIN
WHERE EMP_DEPARTMENT_MAIN_ID = A.EMP_DEPARTMENT_MAIN_ID); 
COMMIT;

UPDATE EMP_FAMILY A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_FAMILY
WHERE EMP_FAMILY_ID = A.EMP_FAMILY_ID); 
COMMIT;

UPDATE EMP_GRADES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_GRADES
WHERE EMP_GRADES_ID = A.EMP_GRADES_ID); 
COMMIT;

UPDATE EMP_JOBS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_JOBS
WHERE EMP_JOB_ID = A.EMP_JOB_ID); 
COMMIT;

UPDATE EMP_SITES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EMP_SITES
WHERE EMP_SITE_ID = A.EMP_SITE_ID); 
COMMIT;

UPDATE ENTITLE_DEDUCT A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.ENTITLE_DEDUCT
WHERE ENTITLE_DEDUCT_ID = A.ENTITLE_DEDUCT_ID
and ENTITLE_DEDUCT_FLAG = A.ENTITLE_DEDUCT_FLAG
); 
COMMIT;

UPDATE EQUATIONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EQUATIONS
WHERE EQUATION_ID = A.EQUATION_ID); 
COMMIT;

UPDATE EXPENSES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.EXPENSES
WHERE EXPENSES_ID = A.EXPENSES_ID); 
COMMIT;

UPDATE FA_BRANCHES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FA_BRANCHES
WHERE FA_BRANCH_ID = A.FA_BRANCH_ID); 
COMMIT;

UPDATE FA_DEPARTMENTS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FA_DEPARTMENTS
WHERE FA_DEPARTMENT_ID = A.FA_DEPARTMENT_ID); 
COMMIT;

UPDATE FA_GROUPS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FA_GROUPS
WHERE FA_GROUPS_ID = A.FA_GROUPS_ID); 
COMMIT;

UPDATE FA_GROUPS_MAIN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FA_GROUPS_MAIN
WHERE FA_GROUPS_MAIN_ID = A.FA_GROUPS_MAIN_ID); 
COMMIT;

UPDATE FA_LEDGER_TRANSACTIONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FA_LEDGER_TRANSACTIONS
WHERE FA_LEDGER_TRANSACTIONS_ID = A.FA_LEDGER_TRANSACTIONS_ID); 
COMMIT;

UPDATE FINANCIAL_REPORT A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FINANCIAL_REPORT
WHERE FINANCIAL_REPORT_ID = A.FINANCIAL_REPORT_ID); 
COMMIT;

UPDATE FIXED_ASSETS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FIXED_ASSETS
WHERE FIXED_ASSET_ID = A.FIXED_ASSET_ID); 
COMMIT;

UPDATE FUNCTIONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.FUNCTIONS
WHERE FUNCTION_ID = A.FUNCTION_ID); 
COMMIT;

UPDATE GENERAL_ACCOUNTS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.GENERAL_ACCOUNTS
WHERE GENERAL_ACCOUNT_ID = A.GENERAL_ACCOUNT_ID); 
COMMIT;

UPDATE INSURANCE_COMPANY A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.INSURANCE_COMPANY
WHERE INSURANCE_COMPANY_ID = A.INSURANCE_COMPANY_ID); 
COMMIT;

UPDATE ITEMS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.ITEMS
WHERE ITEMS_ID = A.ITEMS_ID); 
COMMIT;

UPDATE ITEMS_GROUPS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.ITEMS_GROUPS
WHERE ITEMS_GROUPS_ID = A.ITEMS_GROUPS_ID); 
COMMIT;

UPDATE ITEMS_GROUPS_MAIN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.ITEMS_GROUPS_MAIN
WHERE ITEMS_GROUPS_MAIN_ID = A.ITEMS_GROUPS_MAIN_ID); 
COMMIT;

UPDATE JOBS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.JOBS
WHERE JOB_ID = A.JOB_ID); 
COMMIT;

UPDATE JOURNAL_TYPES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.JOURNAL_TYPES
WHERE JOURNAL_TYPES_ID = A.JOURNAL_TYPES_ID); 
COMMIT;

UPDATE LANGUAGE_DEFINITIONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.LANGUAGE_DEFINITIONS
WHERE LANGUAGE_ID = A.LANGUAGE_ID); 
COMMIT;

UPDATE LEGAL_PERSONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.LEGAL_PERSONS
WHERE LEGAL_PERSON_ID = A.LEGAL_PERSON_ID); 
COMMIT;

UPDATE LEGAL_PERSONS_GROUPS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.LEGAL_PERSONS_GROUPS
WHERE LEGAL_PERSONS_GROUPS_ID = A.LEGAL_PERSONS_GROUPS_ID); 
COMMIT;

UPDATE LEGAL_PERSONS_GROUPS_MAIN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.LEGAL_PERSONS_GROUPS_MAIN
WHERE LEGAL_PERSONS_GROUPS_MAIN_ID = A.LEGAL_PERSONS_GROUPS_MAIN_ID); 
COMMIT;

UPDATE LEGAL_PERSON_CON_PRS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.LEGAL_PERSON_CON_PRS
WHERE LEGAL_PERSON_CON_PRS_ID = A.LEGAL_PERSON_CON_PRS_ID); 
COMMIT;

UPDATE MESSAGES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.MESSAGES
WHERE MESSAGES_ID = A.MESSAGES_ID); 
COMMIT;

UPDATE PENALTIES_LIST A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.PENALTIES_LIST
WHERE PENALTIES_LIST_ID = A.PENALTIES_LIST_ID); 
COMMIT;

UPDATE PRODUCTION A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.PRODUCTION
WHERE PRODUCTION_ID = A.PRODUCTION_ID); 
COMMIT;

UPDATE PUR_LEDGER_TRANSACTIONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.PUR_LEDGER_TRANSACTIONS
WHERE PUR_LEDGER_TRANSACTIONS_ID = A.PUR_LEDGER_TRANSACTIONS_ID); 
COMMIT;

UPDATE PUR_SERVICES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.PUR_SERVICES
WHERE PUR_SERVICES_ID = A.PUR_SERVICES_ID); 
COMMIT;

UPDATE PUR_TERMS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.PUR_TERMS
WHERE PUR_TERMS_ID = A.PUR_TERMS_ID); 
COMMIT;

UPDATE REP_DESIGNER A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.REP_DESIGNER
WHERE REP_DESIGNER_ID = A.REP_DESIGNER_ID); 
COMMIT;

UPDATE REP_DESIGNER_ROW A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.REP_DESIGNER_ROW
WHERE REP_DESIGNER_ROW_ID = A.REP_DESIGNER_ROW_ID); 
COMMIT;

UPDATE SALES_MAN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SALES_MAN
WHERE SALES_MAN_ID = A.SALES_MAN_ID); 
COMMIT;

UPDATE SALES_SERVICES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SALES_SERVICES
WHERE SALES_SERVICES_ID = A.SALES_SERVICES_ID); 
COMMIT;

UPDATE SAL_LEDGER_TRANSACTIONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SAL_LEDGER_TRANSACTIONS
WHERE SAL_LEDGER_TRANSACTIONS_ID = A.SAL_LEDGER_TRANSACTIONS_ID); 
COMMIT;

UPDATE SCHEDULE_DEF A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SCHEDULE_DEF
WHERE SCHEDULE_DEF_ID = A.SCHEDULE_DEF_ID); 
COMMIT;

UPDATE SPONSORS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SPONSORS
WHERE SPONSOR_ID = A.SPONSOR_ID); 
COMMIT;

UPDATE SPONSORS_CONTACT_PERSONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SPONSORS_CONTACT_PERSONS
WHERE SPONSORS_CONTACT_PERSONS_ID = A.SPONSORS_CONTACT_PERSONS_ID); 
COMMIT;

UPDATE STK_LEDGER_TRANSACTIONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.STK_LEDGER_TRANSACTIONS
WHERE STK_LEDGER_TRANSACTIONS_ID = A.STK_LEDGER_TRANSACTIONS_ID); 
COMMIT;

UPDATE SUBSIDIARIES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SUBSIDIARIES
WHERE SUBSIDIARIES_ID = A.SUBSIDIARIES_ID); 
COMMIT;

UPDATE SUPPLIERS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SUPPLIERS
WHERE SUPPLIER_ID = A.SUPPLIER_ID); 
COMMIT;

UPDATE SUPPLIERS_CONTACT_PERSONS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SUPPLIERS_CONTACT_PERSONS
WHERE SUPPLIERS_CONTACT_PERSONS_ID = A.SUPPLIERS_CONTACT_PERSONS_ID); 
COMMIT;

UPDATE SUPPLIERS_GROUPS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SUPPLIERS_GROUPS
WHERE SUPPLIERS_GROUPS_ID = A.SUPPLIERS_GROUPS_ID); 
COMMIT;

UPDATE SUPPLIERS_GROUPS_MAIN A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SUPPLIERS_GROUPS_MAIN
WHERE SUPPLIERS_GROUPS_MAIN_ID = A.SUPPLIERS_GROUPS_MAIN_ID); 
COMMIT;

UPDATE SUPPLIER_EXPENSES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.SUPPLIER_EXPENSES
WHERE SUPPLIER_EXPENSES_ID = A.SUPPLIER_EXPENSES_ID); 
COMMIT;

UPDATE TREASURIES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.TREASURIES
WHERE TREASURIES_ID = A.TREASURIES_ID); 
COMMIT;

UPDATE USER_CODES_SYS A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.USER_CODES_SYS
WHERE USER_CODES_SYS_ID = A.USER_CODES_SYS_ID); 
COMMIT;

UPDATE USER_CODE_TYPES A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.USER_CODE_TYPES
WHERE USER_CODE_TYPES_ID = A.USER_CODE_TYPES_ID
AND SUB_SYSTEM = A.SUB_SYSTEM); 
COMMIT;

UPDATE WORK_LIST A
SET SECONDARY_NAME = (SELECT SECONDARY_NAME
FROM BRIGHT_DATA.WORK_LIST
WHERE WORK_LIST_ID = A.WORK_LIST_ID); 
COMMIT;








