UPDATE SAL_INVOICES
SET DUE_DATE=DOCUMENT_DATE +(SELECT CREDIT_LIMIT_DAYS FROM CUSTOMERS WHERE CUSTOMER_ID =SAL_INVOICES.CUSTOMER_ID )
WHERE DUE_DATE IS NULL 
;
COMMIT;

CREATE OR REPLACE TRIGGER SAL_INVOICES
BEFORE INSERT OR UPDATE  ON SAL_INVOICES FOR EACH ROW
DECLARE
  V_CUSTOMER_LIMIT_DAYS NUMBER ;
  CURSOR C1(V_CUSTOMER_ID NUMBER) IS
  SELECT CREDIT_LIMIT_DAYS
  FROM CUSTOMERS
  WHERE CUSTOMER_ID=V_CUSTOMER_ID
  ;
BEGIN
  IF INSERTING THEN
    :NEW.NET_PRICE :=  :NEW.TOTAL_PRICE + :NEW.EXPENSES + :NEW.SERVICES + :NEW.SALES_TAX - :NEW.ADD_SUBTRACT_TAX - :NEW.ITEM_DISCOUNT  - :NEW.INVOICE_DISCOUNT  -NVL(:NEW.ADVANCED_PAYMENT,0);

     IF :NEW.DUE_DATE IS NULL THEN
        OPEN C1(:NEW.CUSTOMER_ID) ;
        FETCH C1 INTO V_CUSTOMER_LIMIT_DAYS ;
        CLOSE C1 ;
        :NEW.DUE_DATE:=:NEW.DOCUMENT_DATE+NVL(V_CUSTOMER_LIMIT_DAYS ,0) ;
     END IF;
    
  ELSIF UPDATING THEN
    :NEW.NET_PRICE :=  :NEW.TOTAL_PRICE + :NEW.EXPENSES + :NEW.SERVICES + :NEW.SALES_TAX - :NEW.ADD_SUBTRACT_TAX - :NEW.ITEM_DISCOUNT  - :NEW.INVOICE_DISCOUNT  -NVL(:NEW.ADVANCED_PAYMENT,0) ;
  END IF;
END;
/
